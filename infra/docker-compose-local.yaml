version: '3.3'

volumes:
  pg_data:
  static_data:
  media_data:


name: collection

services:

  db:
    image: postgres:13.0-alpine
    env_file: ../.env
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"
        ]
      interval: 5s
      timeout: 3s
      retries: 5

  backend:
    build:
      context: ..
      dockerfile: ./infra/backend/Dockerfile
    env_file: ../.env
    volumes:
      - static_data:/backend_static
      - media_data:/app/media
    command:
      - /bin/sh
      - -c
      - |
        python manage.py collectstatic -c --noinput
        cp -r /app/collected_static/. /backend_static/static
        python manage.py makemigrations
        python manage.py migrate
        python manage.py upload
        gunicorn --bind 0.0.0.0:8000 config.wsgi
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy

  nginx:
    image: nginx:1.25.2-alpine3.18-slim
    ports:
      - "8000:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/index.html:/usr/share/nginx/html/index.html
      - static_data:/usr/share/nginx/html
      - media_data:/usr/share/nginx/html/media/
    depends_on:
      backend:
        condition: service_started
